{"version":3,"sources":["contant/item1.jpg","contant/item2.jpg","contant/item3.jpg","redux/user/user.reducer.js","redux/root-reducer.js","redux/store.js","redux/user/user.action.js","components/header/Header.component.jsx","pages/login/Login.component.jsx","pages/signup/signup.components.jsx","pages/addprodcut/addProduct.compnent.jsx","pages/showUserProduct/showuserproduct.components.jsx","pages/searchForProject/searchforproduct.components.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","INITIAL_STATE","currentUser","currentUserProducts","currentUserID","userReducer","state","action","type","payload","combineReducers","user","middlewares","logger","store","createStore","rootReducer","applyMiddleware","setCurrentUser","setCurrentUserProducts","products","setCurrentUserID","id","withRouter","connect","dispatch","history","Navbar","bg","Brand","href","className","Toggle","aria-controls","Collapse","Nav","console","log","to","onClick","e","push","handelLogout","Carousel","Item","height","src","image1","alt","image2","image3","handleSubmit","userName","password","setErrorMessage","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","status","message","_id","useState","setUserName","setPassword","errorMessage","Container","fluid","Row","Col","xs","Form","onSubmit","Group","as","controlId","Label","column","Control","onChange","target","value","placeholder","Button","variant","Alert","phoneNumber","Signup","setPhoneNumber","productName","initialPrice","userData","setProductName","setInitialPrice","ShowUserProducts","props","handelClick","productID","this","setState","CardDeck","length","map","item","sm","md","Card","key","Header","maxOfferedPrice","Body","Title","Text","bidOffers","Table","striped","bordered","hover","size","bid","offeredPrice","Footer","isSold","React","Component","SearchForProduct","handelSearch","searchField","addNewBid","productId","a","product","parseInt","bidField","App","exact","path","component","Login","AddProduct","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e0dbcc17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/item1.0a089d77.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item2.c68c6122.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item3.86fef79a.jpg\";","const INITIAL_STATE={\r\n    currentUser:\"\",\r\n    currentUserProducts:[],\r\n    currentUserID:\"\",\r\n}\r\n\r\nconst userReducer=(state=INITIAL_STATE,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case 'Set_CurrentUser':\r\n            return{\r\n                ...state,\r\n                currentUser:action.payload\r\n            }\r\n        case 'Set_CurrentUserProducts':\r\n            return{\r\n                ...state,\r\n                currentUserProducts:action.payload\r\n            }\r\n        case 'Set_CurrentUserID':\r\n            return{\r\n                ...state,\r\n                currentUserID:action.payload\r\n             }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default userReducer; ","import {combineReducers} from 'redux';\r\nimport userReducer from './user/user.reducer';\r\n\r\nexport default combineReducers({\r\n    user:userReducer,\r\n})","import {createStore,applyMiddleware} from 'redux';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './root-reducer';\r\nconst middlewares=[logger];\r\nconst store = createStore(rootReducer,applyMiddleware(...middlewares));\r\nexport default store;   ","export const setCurrentUser=user=>({\r\n    type:'Set_CurrentUser',\r\n    payload:user\r\n})\r\nexport const setCurrentUserProducts=products=>({\r\n    type:'Set_CurrentUserProducts',\r\n    payload:products\r\n})\r\nexport const setCurrentUserID=id=>({\r\n    type:'Set_CurrentUserID',\r\n    payload:id\r\n})","import React from 'react';\r\nimport {Navbar,Carousel} from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport './Header.styles.scss';\r\nimport image1 from '../../contant/item1.jpg';\r\nimport image2 from '../../contant/item2.jpg';\r\nimport image3 from '../../contant/item3.jpg';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {setCurrentUser,setCurrentUserProducts,setCurrentUserID} from '../../redux/user/user.action';\r\n\r\nconst handelLogout=(setCurrentUser,setCurrentUserProducts,setCurrentUserID,history)=>{\r\n    setCurrentUser(\"\");\r\n    setCurrentUserID(\"\");\r\n    setCurrentUserProducts([]);\r\n    history.push('/');\r\n}\r\nconst Header=({currentUser,setCurrentUser,setCurrentUserProducts,setCurrentUserID,history})=>(\r\n    <div>\r\n        <Navbar bg=\"light\"  bg=\"primary\" variant=\"dark\" expand=\"lg\" className=\"navbar\">\r\n            <Navbar.Brand href=\"#home\" className=\"brand\">E_Auction</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    {console.log(currentUser),\r\n                    currentUser === \"\" ?\r\n                        <Link className=\"link btn\" to=\"/login\">Login</Link>:\r\n                        <Link className=\"link btn\"onClick={e=>{handelLogout(setCurrentUser,setCurrentUserProducts,setCurrentUserID,history)}}>Logout</Link>\r\n                    }\r\n                    <Link className=\"link btn\" to=\"/signup\">SignUp</Link>\r\n                    {\r\n                        currentUser !== \"\" ?\r\n                        <div>\r\n                            <Link className=\"link btn\" to=\"/addnewproduct\">Add New Product</Link>\r\n                            <Link className=\"link btn\"to=\"/myproduct\">My Product</Link>\r\n                            <Link className=\"link btn\" to=\"/searchforproducts\">Search For Products</Link>\r\n                        </div>:null\r\n                    }\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        <Carousel>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      height=\"400px\"\r\n      src={image1}\r\n      alt=\"First slide\"\r\n    />\r\n  </Carousel.Item>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      height=\"400px\"\r\n      src={image2}\r\n      alt=\"Third slide\"\r\n    />\r\n  </Carousel.Item>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100 image-responsive\"\r\n      height=\"400px\"\r\n      src={image3}\r\n      alt=\"Third slide\"\r\n    />\r\n  </Carousel.Item>\r\n</Carousel>\r\n    </div>\r\n)\r\nconst mapStateToProps=state=>({\r\n    currentUser:state.user.currentUser,\r\n})\r\nconst mapDispatchToProps=dispatch=>({\r\n    setCurrentUser:user=>dispatch(setCurrentUser(user)),\r\n    setCurrentUserProducts:products=>dispatch(setCurrentUserProducts(products)),\r\n    setCurrentUserID:id=>dispatch(setCurrentUserID(id)),\r\n})\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Header));","import React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {setCurrentUser,setCurrentUserProducts,setCurrentUserID} from '../../redux/user/user.action';\r\nimport {Form,Button,Container,Row,Col,Alert} from 'react-bootstrap';\r\nimport './Login.styles.scss';\r\n const handleSubmit=(userName,password,setCurrentUser,setCurrentUserProducts,setCurrentUserID,setErrorMessage,history)=>event=>{\r\n     event.preventDefault();\r\n    const x =fetch('https://svu-e-auction.herokuapp.com/api/user/login', {\r\n     method: \"POST\",\r\n     headers: {\r\n         'Content-Type': 'application/json',\r\n       },\r\n     body: JSON.stringify({\r\n         userName:userName,\r\n         password:password,         \r\n       })\r\n    });\r\n    const p1=x.then(res=>res.json());\r\n    p1.then(data=>{console.log(data);\r\n        if(data.status!==1)\r\n            setErrorMessage(data.message);\r\n        else{\r\n        setCurrentUser(data.data.userName);\r\n        setCurrentUserProducts(data.data.products);\r\n        setCurrentUserID(data.data._id);\r\n        history.push('/searchforproducts');}\r\n    });\r\n }\r\nconst Login=({setCurrentUser,setCurrentUserProducts,setCurrentUserID,history})=>{\r\n        const [userName,setUserName]=useState(\"\");\r\n        const [password,setPassword]=useState(\"\");\r\n        const [errorMessage,setErrorMessage]=useState(\"\");\r\n        return(\r\n            <Container  fluid=\"md\">   \r\n                <Row>\r\n                    <Col xs={8}>      \r\n                        <Form onSubmit={handleSubmit(userName,password,setCurrentUser,setCurrentUserProducts,setCurrentUserID,setErrorMessage,history)}>\r\n                        <Form.Group as={Row} controlId=\"formPlaintextUserName\">\r\n                            <Form.Label column xs=\"3\">\r\n                                User Name\r\n                            </Form.Label>\r\n                            <Col xs=\"9\">\r\n                            <Form.Control type=\"text\" onChange={e=>setUserName(e.target.value)} placeholder=\"User Name\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                            <Form.Label column xs=\"3\">\r\n                            Password\r\n                            </Form.Label>\r\n                            <Col xs=\"9\">\r\n                            <Form.Control type=\"password\" onChange={e=>setPassword(e.target.value)} placeholder=\"Password\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Row>\r\n                            <Col xs=\"10\">\r\n                            </Col>\r\n                            <Button variant=\"primary\"  xs=\"2\" className=\"submit-button\" type=\"submit\">\r\n                                    Submit\r\n                            </Button>\r\n                        </Row>\r\n                        </Form>\r\n                        {\r\n                            errorMessage===\"\"?\r\n                            null:\r\n                            <Alert variant=\"danger\">\r\n                                {errorMessage}\r\n                            </Alert>\r\n                        }\r\n                    </Col>\r\n        \r\n                </Row>\r\n            </Container>  \r\n        )\r\n}\r\nconst mapDispatchToProps=dispatch=>({\r\n    setCurrentUser:user=>dispatch(setCurrentUser(user)),\r\n    setCurrentUserProducts:products=>dispatch(setCurrentUserProducts(products)),\r\n    setCurrentUserID:id=>dispatch(setCurrentUserID(id)),\r\n})\r\nexport default connect(null,mapDispatchToProps)(Login);","import React,{useState} from 'react';\r\nimport {Form,Button,Container,Alert,Row,Col} from 'react-bootstrap';\r\nimport './Signup.styles.scss';\r\n const handleSubmit=(userName,password,phoneNumber,setErrorMessage,history)=>event=>{\r\n    event.preventDefault();\r\n    \r\n    const url='https://svu-e-auction.herokuapp.com/api/user/register';\r\n    const x =fetch(url, {\r\n     method: \"POST\",\r\n     headers: {\r\n      \r\n         'Content-Type': 'application/json',\r\n       },\r\n     body: JSON.stringify({\r\n         userName:userName,\r\n         password:password,\r\n         phoneNumber:phoneNumber,         \r\n       })\r\n    });\r\n    const p1=x.then(res=>res.json());\r\n    p1.then(data=>{console.log(data);\r\n        if(data.status!==1)\r\n            setErrorMessage(data.message);\r\n        else \r\n             history.push('/searchforproducts');\r\n    })\r\n }\r\nexport  default function  Signup({history}){\r\n        const [userName,setUserName]=useState('');\r\n        const [password,setPassword]=useState('');\r\n        const [phoneNumber,setPhoneNumber]=useState('');\r\n        const [errorMessage,setErrorMessage]=useState(\"\");\r\n        return(\r\n            <Container  fluid=\"md\">   \r\n                <Row>\r\n                    <Col xs={8}>      \r\n                        <Form onSubmit={handleSubmit(userName,password,phoneNumber,setErrorMessage,history)}>\r\n                        <Form.Group as={Row} controlId=\"formPlaintextUserName\">\r\n                            <Form.Label column xs=\"3\">\r\n                                User Name\r\n                            </Form.Label>\r\n                            <Col xs=\"9\">\r\n                            <Form.Control type=\"text\" onChange={e=>setUserName(e.target.value)} placeholder=\"User Name\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                            <Form.Label column xs=\"3\">\r\n                            Password\r\n                            </Form.Label>\r\n                            <Col xs=\"9\">\r\n                            <Form.Control type=\"password\" onChange={e=>setPassword(e.target.value)} placeholder=\"Password\" />\r\n                            </Col>\r\n                        </Form.Group>   \r\n                        <Form.Group as={Row} controlId=\"formPlaintextPhoneNumber\">\r\n                            <Form.Label column xs=\"3\">\r\n                               Phone Number\r\n                            </Form.Label>\r\n                            <Col xs=\"9\">\r\n                            <Form.Control type=\"text\" onChange={e=>setPhoneNumber(e.target.value)} placeholder=\"Phone Number\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Row>\r\n                            <Col xs=\"10\">\r\n                            </Col>\r\n                            <Button variant=\"primary\"  xs=\"2\" className=\"submit-button\" type=\"submit\">\r\n                                    Submit\r\n                            </Button>\r\n                        </Row>\r\n                        </Form>\r\n                        {\r\n                        \r\n                             errorMessage===\"\"?\r\n                            null:\r\n                            <Alert variant=\"danger\">\r\n                              {errorMessage}\r\n                             </Alert>\r\n                         }\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Container>  \r\n        )\r\n}\r\n","import React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Form,Button,Container,Row,Col,Alert} from 'react-bootstrap';\r\nimport './addProduct.stayles.scss';\r\n const handleSubmit=(productName,initialPrice,currentUserID,setErrorMessage,history)=>event=>{\r\n     event.preventDefault();\r\n     console.log(currentUserID);\r\n     const userData={\r\n         _id:currentUserID\r\n     }\r\n     console.log(userData);\r\n    const x =fetch('https://svu-e-auction.herokuapp.com/api/product/store', {\r\n     method: \"POST\",\r\n     headers: {\r\n         'Content-Type': 'application/json',\r\n       },\r\n     body: JSON.stringify({\r\n         productName:productName,\r\n         initialPrice:initialPrice,\r\n         user:userData        \r\n       })\r\n    });\r\n    const p1=x.then(res=>res.json());\r\n    p1.then(data=>{console.log(data);\r\n        if(data.status!==1)\r\n            setErrorMessage(data.message);\r\n        else \r\n        history.push('/myproduct');\r\n    });\r\n }\r\nconst AddProduct=({currentUserID,history})=>{\r\n        const [productName,setProductName]=useState(\"\");\r\n        const [initialPrice,setInitialPrice]=useState(\"\");\r\n        const [errorMessage,setErrorMessage]=useState(\"\");\r\n        return(\r\n            <div>\r\n            {\r\n                currentUserID===\"\"?\r\n                <div>\r\n                { history.push('/')}\r\n                </div>:\r\n            <Container  fluid=\"md\">   \r\n                <Row>\r\n                    <Col xs={8}>      \r\n                        <Form onSubmit={handleSubmit(productName,initialPrice,currentUserID,setErrorMessage,history)}>\r\n                        <Form.Group as={Row} controlId=\"formPlaintextUserName\">\r\n                            <Form.Label column xs=\"3\">\r\n                                Product Name\r\n                            </Form.Label>\r\n                            <Col xs=\"9\">\r\n                            <Form.Control type=\"text\" onChange={e=>setProductName(e.target.value)} placeholder=\"Product Name\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                            <Form.Label column xs=\"3\">\r\n                            Inital Price\r\n                            </Form.Label>\r\n                            <Col xs=\"9\">\r\n                            <Form.Control type=\"Number\" onChange={e=>setInitialPrice(e.target.value)} placeholder=\"Initial price\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Row>\r\n                            <Col xs=\"10\">\r\n                            </Col>\r\n                            <Button variant=\"primary\"  xs=\"2\" className=\"submit-button\" type=\"submit\">\r\n                                    Submit\r\n                            </Button>\r\n                        </Row>\r\n                        </Form>\r\n                        {\r\n                            errorMessage===\"\"?\r\n                            null:\r\n                            <Alert variant=\"danger\">\r\n                                {errorMessage}\r\n                            </Alert>\r\n                        }\r\n                    </Col>\r\n        \r\n                </Row>\r\n            </Container>  \r\n                    }\r\n         </div>\r\n        )\r\n}\r\nconst mapStateToProps=state=>({\r\n  currentUserID:state.user.currentUserID,\r\n})\r\nexport default connect(mapStateToProps,null)(AddProduct);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Button,Container,Row,Col,Card,CardDeck ,Table} from 'react-bootstrap';\r\nimport './showuserproduct.styles.scss';\r\n\r\nclass ShowUserProducts extends React.Component{\r\n  \r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        \r\n        this.state={\r\n            products:[],\r\n        }\r\n    }\r\n    componentDidMount()\r\n    {\r\n        if(this.props.currentUserID!==\"\"){\r\n            const x=fetch(\"https://svu-e-auction.herokuapp.com/api/product/userproducts/\"+this.props.currentUserID);\r\n            const p1=x.then(res=>res.json());\r\n            p1.then(data=>{this.setState({products:data.data});\r\n        });\r\n        }\r\n    }\r\n    handelClick=(productID)=>\r\n    {\r\n        const x =fetch('https://svu-e-auction.herokuapp.com/api/product/sold/'+productID);\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n            {\r\n                this.props.currentUserID===\"\"?\r\n                <div>\r\n                { this.props.history.push('/')}\r\n                </div>:\r\n           <CardDeck > {            \r\n             this.state.products.length>0?\r\n                    this.state.products.map(item=>(\r\n                        <Col xs=\"12\" sm=\"6\" md=\"4\" >\r\n                            <Card className=\"text-center cardClass\"   key={item._id }>\r\n                            <Card.Header>\r\n                                    <h3>Product Name : {item.productName}</h3>\r\n                                    <h5>Owner : {item.user.userName}</h5>\r\n                                    <h6>initial price : {item.initialPrice}</h6>\r\n                                    <h6>Max Bid Offer : {item.maxOfferedPrice}</h6>  \r\n                                </Card.Header>\r\n                                <Card.Body className=\"cardbodyClass\">\r\n                                    <Card.Title>bids on product</Card.Title>\r\n                                    <Card.Text>\r\n                                        <div className=\"showBids\">\r\n                                            {\r\n                                                item.bidOffers.length>0?\r\n                                                <Table striped bordered hover size=\"sm\">\r\n                                                <thead>\r\n                                                <tr>\r\n                                                    <th>offerd by</th>\r\n                                                    <th>offered price</th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>{\r\n                                                    item.bidOffers.map(bid=>\r\n                                                <tr>\r\n                                                        <td>{bid.user.userName}</td>\r\n                                                        <td>{bid.offeredPrice}</td>\r\n                                                    \r\n                                                </tr>\r\n                                                    )}\r\n                                                </tbody>\r\n                                            </Table>:\r\n                                            <p>\r\n                                                no bids  yet\r\n                                            </p>\r\n                                                \r\n                                            }\r\n                                        </div>\r\n                                    </Card.Text>\r\n                                   \r\n                                </Card.Body>\r\n                                <Card.Footer className=\"text-muted\"> {\r\n                                        item.isSold===false && item.bidOffers.length>0?\r\n                                        <Button variant=\"primary\" onClick={ e=>  this.handelClick(item._id) }>sell it</Button>\r\n                                        :null\r\n                                    }</Card.Footer>\r\n                                </Card>\r\n                            </Col>\r\n                    ))\r\n                    :null\r\n                    }\r\n                    </CardDeck>   \r\n                }\r\n                </div>    \r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    currentUserID:state.user.currentUserID,\r\n})\r\nexport default connect(mapStateToProps,null)(ShowUserProducts);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Button,Form,Row,Col,Card,CardDeck ,Table,Alert} from 'react-bootstrap';\r\nimport './searchforproducts.styles.scss';\r\n\r\nclass SearchForProduct extends React.Component{\r\n  \r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        \r\n        this.state={\r\n            products:[],\r\n            searchField:'',\r\n            bidField:'',\r\n            errorMessage:'',\r\n        }\r\n    }\r\n    handelSearch=()=>{\r\n            const x=fetch(\"http://localhost:8000/api/product/search/\"+this.props.currentUserID+\"/\"+this.state.searchField);\r\n            const p1=x.then(res=>res.json());\r\n            p1.then(data=>{console.log(data);this.setState({...this.state,products:data.data})});\r\n    }\r\n    addNewBid= async (productId)=>{\r\n        var status;\r\n            const x = await fetch('http://localhost:8000/api/bidoffer/bidFor', {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        user:this.props.currentUserID,\r\n                        product:productId,\r\n                        offeredPrice:parseInt(this.state.bidField),         \r\n                    })\r\n                    }).then(res=>res.json()).then(data=>status=data.status);\r\n                \r\n        if(status===1)\r\n        {\r\n            this.setState({product:[],bidField:'',errorMessage:''})\r\n            this.handelSearch();\r\n        }\r\n        else \r\n            this.setState({...this.state,bidField:'',errorMessage:'something went wrong'});\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n            {\r\n                this.props.currentUserID===\"\"?\r\n                <div>\r\n                { this.props.history.push('/')}\r\n                </div>:\r\n            <div>\r\n                <Row>\r\n                    <div>\r\n                        {\r\n                            this.state.errorMessage!==''?\r\n                            <Alert variant={\"danger\"}>{this.state.errorMessage}</Alert>:\r\n                            null\r\n                        }\r\n                    </div>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs=\"2\" sm=\"3\" md=\"4\">\r\n                    </Col>\r\n                    <Col xs=\"2\" sm=\"3\" md=\"4\">\r\n                    <Form.Group as={Row} controlId=\"searchField\">\r\n                         \r\n                            <Col xs=\"10\">\r\n                                <Form.Control type=\"text\" value={this.state.searchField} onChange={e=>this.setState({...this.state,searchField:e.target.value})} placeholder=\"Search\" />\r\n                            </Col>\r\n                            <Col xs=\"2\">\r\n                               <Button variant=\"primary\" className=\"btn btn-primary\" onClick={e=>{this.handelSearch()}} >\r\n                                    Search\r\n                               </Button>\r\n                            </Col>\r\n                            \r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <div>\r\n                 <CardDeck > {            \r\n             this.state.products.length>0?\r\n                    this.state.products.map(item=>(\r\n                        <Col xs=\"12\" sm=\"6\" md=\"4\" >\r\n                            <Card className=\"text-center cardClass\"   key={item._id }>\r\n                                <Card.Header>\r\n                                    <h3>Product Name : {item.productName}</h3>\r\n                                    <h5>Owner : {item.user.userName}</h5>\r\n                                    <h6>initial price : {item.initialPrice}</h6>\r\n                                    <h6>Max Bid Offer : {item.maxOfferedPrice}</h6>            \r\n                                </Card.Header>\r\n                                <Card.Body className=\"cardbodyClass\">\r\n                                    <Card.Title>bids on product</Card.Title>\r\n                                    <Card.Text>\r\n                                        <div className=\"showBids\">\r\n                                            {\r\n                                                item.bidOffers.length>0?\r\n                                                <Table striped bordered hover size=\"sm\">\r\n                                                <thead>\r\n                                                <tr>\r\n                                                    <th>offerd by</th>\r\n                                                    <th>offered price</th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>{\r\n                                                    item.bidOffers.map(bid=>\r\n                                                <tr>\r\n                                                        <td>{bid.user.userName}</td>\r\n                                                        <td>{bid.offeredPrice}</td>\r\n                                                    \r\n                                                </tr>\r\n                                                    )}\r\n                                                </tbody>\r\n                                            </Table>:\r\n                                            <p>\r\n                                                no bids  yet\r\n                                            </p>\r\n                                                \r\n                                            }\r\n                                        </div>\r\n                                    </Card.Text>\r\n                                   \r\n                                </Card.Body>\r\n                                <Card.Footer className=\"text-muted\"> {\r\n                                    <Form onSubmit={e=>{\r\n                                        if(item.maxOfferedPrice>parseInt(this.state.bidField,10))\r\n                                            this.setState({...this.state,errorMessage:'your bid offer should be more than '+item.maxOfferedPrice})\r\n                                        else  \r\n                                            this.addNewBid(item._id,this.setState);}}>\r\n                                        <Form.Group as={Row} controlId=\"searchField\" >\r\n                                           <Col xs=\"8\">\r\n                                                 <Form.Control type=\"Number\"  onChange={e=>this.setState({...this.state,bidField:e.target.value})} placeholder=\"bid now\" />\r\n                                            </Col>\r\n                                            <Col>\r\n                                            <Button variant=\"primary\" type=\"submit\" >add Bid</Button>\r\n                                             </Col>\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                    }</Card.Footer>\r\n                                </Card>\r\n                            </Col>\r\n                    ))\r\n                    :null\r\n                    }\r\n                    </CardDeck>       \r\n                </div>\r\n             </div>\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    currentUserID:state.user.currentUserID,\r\n})\r\nexport default connect(mapStateToProps,null)(SearchForProduct);","import React from 'react';\nimport Header from './components/header/Header.component';\nimport {Route,Switch} from 'react-router-dom';\nimport Login from './pages/login/Login.component';\nimport Signup from './pages/signup/signup.components';\nimport AddProduct from './pages/addprodcut/addProduct.compnent';\nimport ShowUserProducts from './pages/showUserProduct/showuserproduct.components';\nimport SearchForProduct from './pages/searchForProject/searchforproduct.components';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header history/>\n      <div className=\"after-header\">\n      <Switch>\n        <Route exact path=\"/\" component={Login}/>\n        <Route exact path=\"/login\" component={Login}/>\n        <Route exact path=\"/signup\" component={Signup}/>\n        <Route exact path=\"/addnewproduct\" component={AddProduct}/>\n        <Route exact path=\"/myproduct\" component={ShowUserProducts}/>\n        <Route exact path=\"/searchforproducts\" component={SearchForProduct}/>\n      </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}